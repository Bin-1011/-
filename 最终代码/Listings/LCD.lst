C51 COMPILER V9.60.7.0   LCD                                                               10/03/2024 19:23:41 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE LCD
OBJECT MODULE PLACED IN .\Objects\LCD.obj
COMPILER INVOKED BY: E:\Program Files\Keil_v5\C51\BIN\C51.EXE LCD.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\
                    -Listings\LCD.lst) TABS(2) OBJECT(.\Objects\LCD.obj)

line level    source

*** WARNING C500 IN LINE 1 OF LCD.c: SERIAL NUMBER EXPIRED
   1          #include "LCD.h"
   2          
   3          
   4          void  LCD_delay(void)
   5          {
   6   1        NOP(10);
   7   1      }
   8          
   9          
  10          //写数据
  11          void WriteDataLCD(u8 WDLCD)
  12          {
  13   1        ReadStatusLCD(); //检测忙 
  14   1        LCD_RS = 1;
  15   1        LCD_RW = 0;
  16   1        LCD_Data = WDLCD;
  17   1        LCD_delay();
  18   1        LCD_E = 1;
  19   1        LCD_delay();
  20   1        LCD_E = 0;
  21   1      }
  22          
  23          //写指令
  24          void WriteCommandLCD(u8 WCLCD,BuysC) //BuysC为0时忽略忙检测
  25          {
  26   1        if (BuysC) ReadStatusLCD(); //根据需要检测忙 
  27   1        LCD_RS = 0;
  28   1        LCD_RW = 0; 
  29   1        LCD_Data = WCLCD;
  30   1          LCD_delay();
  31   1        LCD_E = 1; 
  32   1        LCD_delay();
  33   1        LCD_E = 0;  
  34   1      }
  35          
  36          //读状态
  37          u8 ReadStatusLCD(void)
  38          {
  39   1        LCD_Data = 0xFF; 
  40   1        LCD_RS = 0;
  41   1        LCD_RW = 1; 
  42   1          LCD_delay();
  43   1        LCD_E = 1;
  44   1          LCD_delay();
  45   1        while (LCD_Data & Busy); //检测忙信号
  46   1        LCD_E = 0;
  47   1        return(LCD_Data);
  48   1      }
  49          
  50          void LCDInit(void) //LCM初始化
  51          {
  52   1        PSB = 1;  //并口
  53   1      //  PSB = 0;  //SPI口
C51 COMPILER V9.60.7.0   LCD                                                               10/03/2024 19:23:41 PAGE 2   

  54   1        delay_ms(10);
  55   1        LCD_RESET = 0;
  56   1        delay_ms(10);
  57   1        LCD_RESET = 1;
  58   1        delay_ms(100);
  59   1        
  60   1        WriteCommandLCD(0x30,1); //显示模式设置,开始要求每次检测忙信号
  61   1        WriteCommandLCD(0x01,1); //显示清屏
  62   1        WriteCommandLCD(0x06,1); // 显示光标移动设置
  63   1        WriteCommandLCD(0x0C,1); // 显示开及光标设置
  64   1      }
  65          
  66          void LCDClear(void) //清屏
  67          {
  68   1        WriteCommandLCD(0x01,1); //显示清屏
  69   1        WriteCommandLCD(0x34,1); // 显示光标移动设置
  70   1        WriteCommandLCD(0x30,1); // 显示开及光标设置
  71   1      }
  72          
  73          
  74          //按指定位置显示一串字符
  75          void DisplayListChar(u8 X, u8 Y, u8 code *DData)
  76          {
  77   1        u8 ListLength,X2;
  78   1        ListLength = 0;
  79   1        X2 = X;
  80   1        if(Y < 1) Y=1;
  81   1        if(Y > 4) Y=4;
  82   1        X &= 0x0F; //限制X不能大于16，Y在1-4之内
  83   1        switch(Y)
  84   1        {
  85   2          case 1: X2 |= 0X80; break;  //根据行数来选择相应地址
  86   2          case 2: X2 |= 0X90; break;
  87   2          case 3: X2 |= 0X88; break;
  88   2          case 4: X2 |= 0X98; break;
  89   2        }
  90   1        WriteCommandLCD(X2, 1); //发送地址码
  91   1        while (DData[ListLength] >= 0x20) //若到达字串尾则退出
  92   1        {
  93   2          if (X <= 0x0F) //X坐标应小于0xF
  94   2          {
  95   3            WriteDataLCD(DData[ListLength]); //
  96   3            ListLength++;
  97   3            X++;
  98   3          }
  99   2        }
 100   1      }
 101          
 102          //图形显示122*32
 103          /*void DisplayImage (u8 code *DData)
 104          {
 105            u8 x,y,i;
 106            unsigned int tmp=0;
 107            for(i=0;i<9;)   //分两屏，上半屏和下半屏，因为起始地址不同，需要分开
 108            {
 109              for(x=0;x<32;x++) //32行
 110              {
 111                WriteCommandLCD(0x34,1);
 112                WriteCommandLCD((0x80+x),1);//列地址
 113                WriteCommandLCD((0x80+i),1);  //行地址，下半屏，即第三行地址0X88
 114                WriteCommandLCD(0x30,1);    
 115                for(y=0;y<16;y++) 
C51 COMPILER V9.60.7.0   LCD                                                               10/03/2024 19:23:41 PAGE 3   

 116                  WriteDataLCD(DData[tmp+y]);//读取数据写入LCD
 117                tmp+=16;    
 118              }
 119              i+=8;
 120            }
 121            WriteCommandLCD(0x36,1);  //扩充功能设定
 122            WriteCommandLCD(0x30,1);
 123          }
 124          */


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    264    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       6
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
