C51 COMPILER V9.60.7.0   OLED                                                              10/03/2024 19:23:41 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE OLED
OBJECT MODULE PLACED IN .\Objects\oled.obj
COMPILER INVOKED BY: E:\Program Files\Keil_v5\C51\BIN\C51.EXE oled.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.
                    -\Listings\oled.lst) TABS(2) OBJECT(.\Objects\oled.obj)

line level    source

*** WARNING C500 IN LINE 1 OF oled.c: SERIAL NUMBER EXPIRED
   1          #include "oled.h"
   2          #include "oledfont.h"    
   3          
   4          //OLED的显存
   5          //存放格式如下.
   6          //[0]0 1 2 3 ... 127  
   7          //[1]0 1 2 3 ... 127  
   8          //[2]0 1 2 3 ... 127  
   9          //[3]0 1 2 3 ... 127  
  10          //[4]0 1 2 3 ... 127  
  11          //[5]0 1 2 3 ... 127  
  12          //[6]0 1 2 3 ... 127  
  13          //[7]0 1 2 3 ... 127         
  14          
  15          /**********************************************
  16          //IIC Start
  17          **********************************************/
  18          void IIC_Start()
  19          {
  20   1      
  21   1        OLED_SCLK_Set() ; 
  22   1        OLED_SDIN_Set();
  23   1        OLED_SDIN_Clr();
  24   1        OLED_SCLK_Clr();
  25   1      }
  26          
  27          /**********************************************
  28          //IIC Stop
  29          **********************************************/
  30          void IIC_Stop()
  31          {
  32   1        OLED_SCLK_Set() ;
  33   1        OLED_SDIN_Clr();
  34   1        OLED_SDIN_Set();
  35   1      }
  36          
  37          void IIC_Wait_Ack()
  38          {
  39   1        OLED_SCLK_Set() ; 
  40   1        OLED_SCLK_Clr();
  41   1      }
  42          /**********************************************
  43          // IIC Write byte
  44          **********************************************/
  45          
  46          void Write_IIC_Byte(unsigned char IIC_Byte)
  47          {
  48   1        unsigned char i;
  49   1        unsigned char m,da;
  50   1        da=IIC_Byte;
  51   1        OLED_SCLK_Clr();
  52   1        for(i=0;i<8;i++)    
  53   1        {
C51 COMPILER V9.60.7.0   OLED                                                              10/03/2024 19:23:41 PAGE 2   

  54   2          m=da;
  55   2          m=m&0x80;
  56   2          if(m==0x80)
  57   2          {OLED_SDIN_Set();}
  58   2          else OLED_SDIN_Clr();
  59   2          da=da<<1;
  60   2          OLED_SCLK_Set();
  61   2          OLED_SCLK_Clr(); 
  62   2        }
  63   1      }
  64          /**********************************************
  65          // IIC Write Command
  66          **********************************************/
  67          void Write_IIC_Command(unsigned char IIC_Command)
  68          {
  69   1         IIC_Start();
  70   1         Write_IIC_Byte(0x78);            //Slave address,SA0=0
  71   1        IIC_Wait_Ack(); 
  72   1         Write_IIC_Byte(0x00);      //write command
  73   1        IIC_Wait_Ack(); 
  74   1         Write_IIC_Byte(IIC_Command); 
  75   1        IIC_Wait_Ack(); 
  76   1         IIC_Stop();
  77   1      }
  78          /**********************************************
  79          // IIC Write Data
  80          **********************************************/
  81          void Write_IIC_Data(unsigned char IIC_Data)
  82          {
  83   1         IIC_Start();
  84   1         Write_IIC_Byte(0x78);      //D/C#=0; R/W#=0
  85   1        IIC_Wait_Ack(); 
  86   1         Write_IIC_Byte(0x40);      //write data
  87   1        IIC_Wait_Ack(); 
  88   1         Write_IIC_Byte(IIC_Data);
  89   1        IIC_Wait_Ack(); 
  90   1         IIC_Stop();
  91   1      }
  92          void OLED_WR_Byte(u8 dat,u8 cmd)
  93          {
  94   1        if(cmd)
  95   1        {
  96   2          Write_IIC_Data(dat);
  97   2        }
  98   1        else
  99   1        {
 100   2          Write_IIC_Command(dat);
 101   2        }
 102   1      }
 103          
 104          void OLED_Set_Pos(u8 x, u8 y) 
 105          { 
 106   1        OLED_WR_Byte(0xb0+y,OLED_CMD);
 107   1        OLED_WR_Byte(((x&0xf0)>>4)|0x10,OLED_CMD);
 108   1        OLED_WR_Byte(x&0x0f,OLED_CMD); 
 109   1      }       
 110          //开启OLED显示    
 111          void OLED_Display_On(void)
 112          {
 113   1        OLED_WR_Byte(0X8D,OLED_CMD);  //SET DCDC命令
 114   1        OLED_WR_Byte(0X14,OLED_CMD);  //DCDC ON
 115   1        OLED_WR_Byte(0XAF,OLED_CMD);  //DISPLAY ON
C51 COMPILER V9.60.7.0   OLED                                                              10/03/2024 19:23:41 PAGE 3   

 116   1      }
 117          //关闭OLED显示     
 118          void OLED_Display_Off(void)
 119          {
 120   1        OLED_WR_Byte(0X8D,OLED_CMD);  //SET DCDC命令
 121   1        OLED_WR_Byte(0X10,OLED_CMD);  //DCDC OFF
 122   1        OLED_WR_Byte(0XAE,OLED_CMD);  //DISPLAY OFF
 123   1      }            
 124          //清屏函数,清完屏,整个屏幕是黑色的!和没点亮一样!!!    
 125          void OLED_Clear(void)  
 126          {  
 127   1        u8 i,n;       
 128   1        for(i=0;i<4;i++)  
 129   1        {  
 130   2          OLED_WR_Byte (0xb0+i,OLED_CMD);    //设置页地址（0~3）
 131   2          OLED_WR_Byte (0x00,OLED_CMD);      //设置显示位置―列低地址
 132   2          OLED_WR_Byte (0x10,OLED_CMD);      //设置显示位置―列高地址   
 133   2          for(n=0;n<128;n++)OLED_WR_Byte(0,OLED_DATA); 
 134   2        } //更新显示
 135   1      }
 136          
 137          
 138          //在指定位置显示一个字符,包括部分字符
 139          //x:0~127
 140          //y:0~63
 141          //mode:0,反白显示;1,正常显示         
 142          //size:选择字体 16/12 
 143          void OLED_ShowChar(u8 x,u8 y,u8 chr,u8 size2)
 144          {       
 145   1        u8 c=0,i=0; 
 146   1        c=chr-' ';//得到偏移后的值
 147   1        if(size2==16)
 148   1        {
 149   2        OLED_Set_Pos(x,y);  
 150   2        for(i=0;i<8;i++)
 151   2        OLED_WR_Byte(F8X16[c*16+i],OLED_DATA);
 152   2        OLED_Set_Pos(x,y+1);
 153   2        for(i=0;i<8;i++)
 154   2        OLED_WR_Byte(F8X16[c*16+i+8],OLED_DATA);
 155   2        }
 156   1        else if(size2==8)
 157   1        { 
 158   2          OLED_Set_Pos(x,y+1);
 159   2          for(i=0;i<6;i++)
 160   2          OLED_WR_Byte(F6x8[c*6+i],OLED_DATA);
 161   2        }
 162   1      }
 163          //m^n函数
 164          u32 oled_pow(u8 m,u8 n)
 165          {
 166   1        u32 result=1;  
 167   1        while(n--)result*=m;    
 168   1        return result;
 169   1      }         
 170          //显示数字
 171          //x,y :起点坐标  
 172          //len :数字的位数
 173          //size2:字体大小
 174          //mode:模式 0,填充模式;1,叠加模式
 175          //num:数值;       
 176          void OLED_ShowNum(u8 x,u8 y,u32 num,u8 len,u8 size2)
 177          {           
C51 COMPILER V9.60.7.0   OLED                                                              10/03/2024 19:23:41 PAGE 4   

 178   1        u8 t,temp;
 179   1        u8 enshow=0;               
 180   1        for(t=0;t<len;t++)
 181   1        {
 182   2          temp=(num/oled_pow(10,len-t-1))%10;
 183   2          if(enshow==0&&t<(len-1))
 184   2          {
 185   3            if(temp==0)
 186   3            {
 187   4              OLED_ShowChar(x+(size2/2)*t,y,' ',size2);
 188   4              continue;
 189   4            }else enshow=1; 
 190   3             
 191   3          }
 192   2          OLED_ShowChar(x+(size2/2)*t,y,temp+'0',size2); 
 193   2        }
 194   1      } 
 195          //显示一个字符号串
 196          void OLED_ShowString(u8 x,u8 y,u8 *chr,u8 size2)
 197          {
 198   1        u8 j=0;
 199   1        while (chr[j]!='\0')
 200   1        {
 201   2          OLED_ShowChar(x,y,chr[j++],size2);
 202   2          if(size2==8) x+=6;
 203   2          else x+=size2/2;
 204   2        }
 205   1      }
 206          //显示汉字
 207          void OLED_ShowCHinese(u8 x,u8 y,u8 no)
 208          {               
 209   1        u8 t,adder=0;
 210   1        OLED_Set_Pos(x,y);  
 211   1        for(t=0;t<16;t++)
 212   1        {
 213   2          OLED_WR_Byte(Hzk[2*no][t],OLED_DATA);
 214   2          adder+=1;
 215   2        } 
 216   1        OLED_Set_Pos(x,y+1);
 217   1        for(t=0;t<16;t++)
 218   1        { 
 219   2          OLED_WR_Byte(Hzk[2*no+1][t],OLED_DATA);
 220   2          adder+=1;
 221   2        }         
 222   1      }
 223          /***********功能描述：显示显示BMP图片128×64起始点坐标(x,y),x的范围0～127，y为页的范围0～7****************
             -*/
 224          /*void OLED_DrawBMP(u8 x0, u8 y0,u8 x1, u8 y1,u8 BMP[])
 225          {   
 226            unsigned int j=0;
 227            u8 x,y;
 228            for(y=y0;y<y1;y++)
 229            {
 230            OLED_Set_Pos(x0,y);
 231            for(x=x0;x<x1;x++)
 232              {      
 233                OLED_WR_Byte(BMP[j++],OLED_DATA);       
 234              }
 235            }
 236          }*/ 
 237          
 238          
C51 COMPILER V9.60.7.0   OLED                                                              10/03/2024 19:23:41 PAGE 5   

 239                      
 240          void OLED_Init(void)
 241          {
 242   1        delay_ms(200);
 243   1        
 244   1        OLED_WR_Byte(0xAE,OLED_CMD);//--turn off oled panel
 245   1        OLED_WR_Byte(0x00,OLED_CMD);//---set low column address
 246   1        OLED_WR_Byte(0x10,OLED_CMD);//---set high column address
 247   1        OLED_WR_Byte(0x40,OLED_CMD);//--set start line address  Set Mapping RAM Display Start Line (0x00~0x3F)
 248   1        OLED_WR_Byte(0x81,OLED_CMD);//--set contrast control register
 249   1        OLED_WR_Byte(0xCF,OLED_CMD);// Set SEG Output Current Brightness
 250   1        OLED_WR_Byte(0xA1,OLED_CMD);//--Set SEG/Column Mapping     0xa0左右反置 0xa1正常
 251   1        OLED_WR_Byte(0xC8,OLED_CMD);//Set COM/Row Scan Direction   0xc0上下反置 0xc8正常
 252   1        OLED_WR_Byte(0xA6,OLED_CMD);//--set normal display
 253   1        OLED_WR_Byte(0xA8,OLED_CMD);//--set multiplex ratio(1 to 64)
 254   1        OLED_WR_Byte(0x1f,OLED_CMD);//--1/64 duty
 255   1        OLED_WR_Byte(0xD3,OLED_CMD);//-set display offset Shift Mapping RAM Counter (0x00~0x3F)
 256   1        OLED_WR_Byte(0x00,OLED_CMD);//-not offset
 257   1        OLED_WR_Byte(0xd5,OLED_CMD);//--set display clock divide ratio/oscillator frequency
 258   1        OLED_WR_Byte(0x80,OLED_CMD);//--set divide ratio, Set Clock as 100 Frames/Sec
 259   1        OLED_WR_Byte(0xD9,OLED_CMD);//--set pre-charge period
 260   1        OLED_WR_Byte(0xF1,OLED_CMD);//Set Pre-Charge as 15 Clocks & Discharge as 1 Clock
 261   1        OLED_WR_Byte(0xDA,OLED_CMD);//--set com pins hardware configuration
 262   1        OLED_WR_Byte(0x00,OLED_CMD);
 263   1        OLED_WR_Byte(0xDB,OLED_CMD);//--set vcomh
 264   1        OLED_WR_Byte(0x40,OLED_CMD);//Set VCOM Deselect Level
 265   1        OLED_WR_Byte(0x20,OLED_CMD);//-Set Page Addressing Mode (0x00/0x01/0x02)
 266   1        OLED_WR_Byte(0x02,OLED_CMD);//
 267   1        OLED_WR_Byte(0x8D,OLED_CMD);//--set Charge Pump enable/disable
 268   1        OLED_WR_Byte(0x14,OLED_CMD);//--set(0x10) disable
 269   1        OLED_WR_Byte(0xA4,OLED_CMD);// Disable Entire Display On (0xa4/0xa5)
 270   1        OLED_WR_Byte(0xA6,OLED_CMD);// Disable Inverse Display On (0xa6/a7) 
 271   1        OLED_WR_Byte(0xAF,OLED_CMD);
 272   1        OLED_Clear();
 273   1      }  
 274          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    872    ----
   CONSTANT SIZE    =   3736    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      23
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
